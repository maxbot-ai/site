"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),g=o,m=d["".concat(l,".").concat(g)]||d[g]||c[g]||r;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9386:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=n(7462),o=(n(7294),n(3905));const r={},i="Quick Start",s={unversionedId:"getting-started/quick-start",id:"getting-started/quick-start",title:"Quick Start",description:"In this quick start tutorial, we help you use MaxBot to build your first conversation.",source:"@site/docs/getting-started/quick-start.md",sourceDirName:"getting-started",slug:"/getting-started/quick-start",permalink:"/getting-started/quick-start",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Installation",permalink:"/getting-started/installation"},next:{title:"Creating Bots",permalink:"/getting-started/creating-bots"}},l={},u=[{value:"Configure channels",id:"configure-channels",level:2},{value:"Define intents",id:"define-intents",level:2},{value:"Build a dialog",id:"build-a-dialog",level:2},{value:"Run the bot",id:"run-the-bot",level:2}],p={toc:u};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quick-start"},"Quick Start"),(0,o.kt)("p",null,"In this quick start tutorial, we help you use MaxBot to build your first conversation."),(0,o.kt)("p",null,"What does a bot look like? Take a look at a simple bot that only knows how to greet and say goodbye to the user via the ",(0,o.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots"},"Telegram Messenger"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"channels:\n  telegram:\n    api_token: 110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw\nintents:\n  - name: greetings\n    examples:\n      - Good morning\n      - Hello\n      - Hi\n  - name: ending\n    examples:\n      - Goodbye\n      - Bye\n      - See you\ndialog:\n  - condition: intents.greetings\n    response: Good day to you!\n  - condition: intents.ending\n    response: OK. See you later.\n  - condition: true\n    response: Sorry I don't understand.\n")),(0,o.kt)("p",null,"Bot resources such as channels, intents and a dialog tree are defined using YAML. So what did that code do?"),(0,o.kt)("h2",{id:"configure-channels"},"Configure channels"),(0,o.kt)("p",null,"First, we configure channels. Channels are a way to integrate your bot with various messaging platforms. You must configure at least one channel to create a bot. The telegam channel is configured by specifying secret ",(0,o.kt)("inlineCode",{parentName:"p"},"api_token")," for the telegram bot."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"channels:\n  telegram:\n    api_token: 110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The actual token here is for demonstration only and does not refer to any telegram bot. If you want to run this bot, you should go to ",(0,o.kt)("a",{parentName:"p",href:"https://t.me/botfather"},"@BotFather"),", create your own bot, get its API token and specify it in the bot resources.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Telegram channel is the best choice for a quick start because it's easy to run right on your laptop. Telegram Bot API allows you to receive incoming updates via long polling, so you ",(0,o.kt)("strong",{parentName:"p"},"don't need")," to have an external IP and set up webhooks.")),(0,o.kt)("h2",{id:"define-intents"},"Define intents"),(0,o.kt)("p",null,"Next, we define intents that recognize user greetings and endings. Intents are purposes or goals that is expressed in user input. For each intent we provide examples of utterances that real users might enter to trigger this intent. The bot uses this examples to train machine learning  models to understand user questions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"intents:\n  - name: greetings\n    examples:\n      - Good morning\n      - Hello\n      - Hi\n  - name: ending\n    examples:\n      - Goodbye\n      - Bye\n      - See you\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"By default MaxBot uses simple builtin model based on cosine similarity to recognized intents. Is is easy to integrate MaxBot with state of the art natural language processing and machine learning models for the best recognition quality.")),(0,o.kt)("h2",{id:"build-a-dialog"},"Build a dialog"),(0,o.kt)("p",null,"Finally, we build a dialog. A dialog defines the flow of your conversation in the form of a logic tree. It matches intents (what users say) to responses (what your bot says back). Each node of the tree has a condition that triggers it, based on user input."),(0,o.kt)("p",null,"We create a simple dialog that handles greeting and ending intents, each with a single node. It is also good practice to add a node to handle misunderstood user utterances."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"dialog:\n  - condition: intents.greetings\n    response: Good day to you!\n  - condition: intents.ending\n    response: OK. See you later.\n  - condition: true\n    response: Sorry I don't understand.\n")),(0,o.kt)("h2",{id:"run-the-bot"},"Run the bot"),(0,o.kt)("p",null,"We got a simple bot that recognizes and responds to both greeting and ending inputs. Let's see how well it works."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Follow the ",(0,o.kt)("a",{parentName:"p",href:"/getting-started/installation"},"Installation")," instructions and install MaxBot first.")),(0,o.kt)("p",null,"The bot will be available through the ",(0,o.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots"},"Telegram Messenger"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"To integrate with the messenger, contact ",(0,o.kt)("a",{parentName:"p",href:"https://t.me/botfather"},"@BotFather")," and ask it to create a bot for you and generate an API token. Then specify API token in the bot resources. Refer ",(0,o.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots#6-botfather"},"official docs")," for more information about telegram bots.")),(0,o.kt)("p",null,"Save the bot resources as ",(0,o.kt)("inlineCode",{parentName:"p"},"bot.yaml")," or something similar. Run the MaxBot CLI app passing the path to the ",(0,o.kt)("inlineCode",{parentName:"p"},"bot.yaml")," as a parameter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ maxbot run --bot bot.yaml\n\u2713 Started polling updater... Press 'Ctrl-C' to exit.\n")),(0,o.kt)("p",null,"Open your bot in telegram messenger and greet it."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type ",(0,o.kt)("inlineCode",{parentName:"li"},"Hello"),". You will see the appropriate response: ",(0,o.kt)("em",{parentName:"li"},'"Good day to you."')),(0,o.kt)("li",{parentName:"ul"},"Type ",(0,o.kt)("inlineCode",{parentName:"li"},"bye")," and the bot will reply ",(0,o.kt)("em",{parentName:"li"},'"OK. See you later."')),(0,o.kt)("li",{parentName:"ul"},"Enter a message unknown to the bot, ",(0,o.kt)("inlineCode",{parentName:"li"},"How are you?")," Get a response: ",(0,o.kt)("em",{parentName:"li"},'"Sorry I don\'t understand."'))),(0,o.kt)("p",null,"The output in your console will look like this"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[01/27/23 23:06:44], telegram#123456789\n\ud83e\uddd1 Hello\n\ud83e\udd16 Good day to you!\n\n[01/27/23 23:06:48], telegram#123456789\n\ud83e\uddd1 bye\n\ud83e\udd16 OK. See you later.\n\n[01/27/23 23:07:03], telegram#123456789\n\ud83e\uddd1 How are you?\n\ud83e\udd16 Sorry I don't understand.\n")),(0,o.kt)("p",null,"Press ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl-C")," to exit MaxBot CLI app."),(0,o.kt)("p",null,"Congratulations! You have successfully created and launched a simple bot and chatted with it."))}d.isMDXComponent=!0}}]);