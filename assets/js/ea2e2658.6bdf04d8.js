"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[521],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,k=u["".concat(s,".").concat(c)]||u[c]||m[c]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4250:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={},i="Numbers",o={unversionedId:"design-reference/numbers",id:"design-reference/numbers",title:"Numbers",description:"There are two numeric types: integer and float.",source:"@site/docs/design-reference/numbers.md",sourceDirName:"design-reference",slug:"/design-reference/numbers",permalink:"/design-reference/numbers",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Dictionaries",permalink:"/design-reference/dictionaries"},next:{title:"Coding Guides",permalink:"/category/coding-guides"}},s={},p=[{value:"Literals",id:"literals",level:2},{value:"<code>42</code>",id:"new-int",level:3},{value:"<code>42.1e2</code>",id:"new-float",level:3},{value:"Constructors",id:"constructors",level:2},{value:"<code>any|int</code>",id:"filter-int",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Examples",id:"examples",level:4},{value:"<code>any|float</code>",id:"filter-float",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Examples",id:"examples-1",level:4},{value:"Operators:",id:"operators",level:2},{value:"<code>+</code> <code>-</code> <code>*</code> <code>/</code> <code>//</code> <code>%</code> <code>*</code> <code>**</code>",id:"math",level:3},{value:"Tests",id:"tests",level:2},{value:"<code>x is divisibleby</code>",id:"test-divisibleby",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Examples",id:"examples-2",level:4},{value:"<code>x is even</code>",id:"test-even",level:3},{value:"Examples",id:"examples-3",level:4},{value:"<code>x is float</code>",id:"test-float",level:3},{value:"Examples",id:"examples-4",level:4},{value:"<code>x is integer</code>",id:"test-integer",level:3},{value:"Examples",id:"examples-5",level:4},{value:"<code>x is number</code>",id:"test-number",level:3},{value:"Examples",id:"examples-6",level:4},{value:"<code>x is odd</code>",id:"test-odd",level:3},{value:"Examples",id:"examples-7",level:4},{value:"Filters",id:"filters",level:2},{value:"<code>number|abs</code>",id:"filter-abs",level:3},{value:"<code>number|filesizeformat</code>",id:"filter-filesizeformat",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"<code>number|round</code>",id:"filter-round",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Examples",id:"examples-8",level:4}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"numbers"},"Numbers"),(0,r.kt)("p",null,"There are two numeric types: integer and float."),(0,r.kt)("h2",{id:"literals"},"Literals"),(0,r.kt)("h3",{id:"new-int"},(0,r.kt)("inlineCode",{parentName:"h3"},"42")),(0,r.kt)("p",null,"Integers are whole numbers without a decimal part. The ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," character can be used to separate groups for legibility."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{{ 42 / 123_456 }}\n")),(0,r.kt)("h3",{id:"new-float"},(0,r.kt)("inlineCode",{parentName:"h3"},"42.1e2")),(0,r.kt)("p",null,"Floating point numbers can be written using a ",(0,r.kt)("inlineCode",{parentName:"p"},".")," as a decimal mark. They can also be written in scientific notation with an upper or lower case ",(0,r.kt)("inlineCode",{parentName:"p"},"e")," to indicate the exponent part. The ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," character can be used to separate groups for legibility, but cannot be used in the exponent part."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{{ 42.23 / 42.1e2 / 123_456.789 }}\n")),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"filter-int"},(0,r.kt)("inlineCode",{parentName:"h3"},"any|int")),(0,r.kt)("p",null,"Convert the value into an integer."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"default")," - The value to return when conversion doesn\u2019t work (default=0)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"base")," - Overrides the default base (10), which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively.")),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{{ "2"|int + 2 }}\n-> 4\n\n{{ "0xFF"|int }}\n255\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-filters.int"},"Jinja Docs"),"."),(0,r.kt)("h3",{id:"filter-float"},(0,r.kt)("inlineCode",{parentName:"h3"},"any|float")),(0,r.kt)("p",null,"Convert the value into a floating point number."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"default")," - The value to return when conversion doesn\u2019t work (default=0.0).")),(0,r.kt)("h4",{id:"examples-1"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{{ "1.1"|float + "0.5"|float }}\n-> 1.6\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-filters.float"},"Jinja Docs"),"."),(0,r.kt)("h2",{id:"operators"},"Operators:"),(0,r.kt)("h3",{id:"math"},(0,r.kt)("inlineCode",{parentName:"h3"},"+")," ",(0,r.kt)("inlineCode",{parentName:"h3"},"-")," ",(0,r.kt)("inlineCode",{parentName:"h3"},"*")," ",(0,r.kt)("inlineCode",{parentName:"h3"},"/")," ",(0,r.kt)("inlineCode",{parentName:"h3"},"//")," ",(0,r.kt)("inlineCode",{parentName:"h3"},"%")," ",(0,r.kt)("inlineCode",{parentName:"h3"},"*")," ",(0,r.kt)("inlineCode",{parentName:"h3"},"**")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ 1 + 1 }} -> 2")," - Add two numbers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ 3 - 2 }} -> 1")," - Subtract the second number from the first one."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ 1 / 2 }} -> 0.5")," - Divide two numbers. The return value will be a floating point number."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ 20 // 7 }} -> 2")," - Divide two numbers and return the truncated integer result."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ 11 % 7 }} -> 4")," - Calculate the remainder of an integer division."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ 2 * 2 }} -> 4")," - Multiply the left operand with the right one."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ 2**3 }} -> 8")," - Raise the left operand to the power of the right operand.")),(0,r.kt)("h2",{id:"tests"},"Tests"),(0,r.kt)("h3",{id:"test-divisibleby"},(0,r.kt)("inlineCode",{parentName:"h3"},"x is divisibleby")),(0,r.kt)("p",null,"Check if a variable is divisible by a number."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"num")," - The number by which we divide.")),(0,r.kt)("h4",{id:"examples-2"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{{ 12 is divisibleby 4 }}\n-> true\n\n{{ 11 is divisibleby 3 }}\n-> false\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-test.divisibleby"},"Jinja Docs"),"."),(0,r.kt)("h3",{id:"test-even"},(0,r.kt)("inlineCode",{parentName:"h3"},"x is even")),(0,r.kt)("p",null,"Return true if the variable is even."),(0,r.kt)("h4",{id:"examples-3"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{{ 12 is even}}\n-> true\n\n{{ 11 is even }}\n-> false\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-tests.even"},"Jinja Docs"),"."),(0,r.kt)("h3",{id:"test-float"},(0,r.kt)("inlineCode",{parentName:"h3"},"x is float")),(0,r.kt)("p",null,"Return true if the object is a float."),(0,r.kt)("h4",{id:"examples-4"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{{ 12 is float}}\n-> false\n\n{{ 12.0 is float }}\n-> true\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-tests.float"},"Jinja Docs"),"."),(0,r.kt)("h3",{id:"test-integer"},(0,r.kt)("inlineCode",{parentName:"h3"},"x is integer")),(0,r.kt)("p",null,"Return true if the object is a integer."),(0,r.kt)("h4",{id:"examples-5"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{{ 12 is integer}}\n-> true\n\n{{ 12.0 is integer }}\n-> false\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-tests.integer"},"Jinja Docs"),"."),(0,r.kt)("h3",{id:"test-number"},(0,r.kt)("inlineCode",{parentName:"h3"},"x is number")),(0,r.kt)("p",null,"Return true if the object is a number."),(0,r.kt)("h4",{id:"examples-6"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{{ 12 is number}}\n-> true\n\n{{ 12.0 is number }}\n-> true\n\n{{ "12" is number }}\n-> false\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-tests.number"},"Jinja Docs"),"."),(0,r.kt)("h3",{id:"test-odd"},(0,r.kt)("inlineCode",{parentName:"h3"},"x is odd")),(0,r.kt)("p",null,"Return true if the number is odd."),(0,r.kt)("h4",{id:"examples-7"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{{ 11 is odd}}\n-> true\n\n{{ 12 is odd }}\n-> false\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-tests.odd"},"Jinja Docs"),"."),(0,r.kt)("h2",{id:"filters"},"Filters"),(0,r.kt)("h3",{id:"filter-abs"},(0,r.kt)("inlineCode",{parentName:"h3"},"number|abs")),(0,r.kt)("p",null,"Return the absolute value of the argument."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-filters.abs"},"Jinja Docs"),"."),(0,r.kt)("h3",{id:"filter-filesizeformat"},(0,r.kt)("inlineCode",{parentName:"h3"},"number|filesizeformat")),(0,r.kt)("p",null,"Format the value like a \u2018human-readable\u2019 file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc)."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"binary")," - Per default decimal prefixes are used (Mega, Giga, etc.), if the parameter is set to true the binary prefixes are used (Mebi, Gibi).")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-filters.filesizeformat"},"Jinja Docs"),"."),(0,r.kt)("h3",{id:"filter-round"},(0,r.kt)("inlineCode",{parentName:"h3"},"number|round")),(0,r.kt)("p",null,"Round the number to a given precision."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"precision")," - Specifies the precision (default is 0)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"method")," - Specifies the method (default is common):",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"'common' - rounds either up or down;"),(0,r.kt)("li",{parentName:"ul"},"'floor' - always rounds down;"),(0,r.kt)("li",{parentName:"ul"},"'ceil' - always rounds up.")))),(0,r.kt)("h4",{id:"examples-8"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{{ 42.55|round }}\n-> 43.0\n{{ 42.55|round(1, 'floor') }}\n-> 42.5\n")),(0,r.kt)("p",null,"Note that even if rounded to 0 precision, a float is returned. If you need a real integer, pipe it through int:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{{ 42.55|round|int }}\n-> 43\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See also"),": ",(0,r.kt)("a",{parentName:"p",href:"https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-filters.round"},"Jinja Docs"),"."))}u.isMDXComponent=!0}}]);