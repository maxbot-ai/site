"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[843],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(g,i(i({ref:t},p),{},{components:n})):o.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1200:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(7462),a=(n(7294),n(3905));const r={},i="Basic Example",s={unversionedId:"coding-guides/basic-example",id:"coding-guides/basic-example",title:"Basic Example",description:"A basic conversational application based on maxbot looks something like this:",source:"@site/docs/coding-guides/basic-example.md",sourceDirName:"coding-guides",slug:"/coding-guides/basic-example",permalink:"/coding-guides/basic-example",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Coding Guides",permalink:"/category/coding-guides"},next:{title:"Bots",permalink:"/coding-guides/bots"}},l={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"basic-example"},"Basic Example"),(0,a.kt)("p",null,"A basic conversational application based on ",(0,a.kt)("strong",{parentName:"p"},"maxbot")," looks something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'from maxbot import MaxBot\n\nbot = MaxBot.inline("""\n    dialog:\n      - condition: message.text.lower() in [\'hello\', \'hi\']\n        response: Good day to you!\n      - condition: message.text.lower() in [\'good bye\', \'bye\']\n        response: OK. See you later.\n      - condition: true\n        response: Sorry I don"t understand.\n""")\n\ndialog = {"channel_name": "cli", "user_id": 1}\n\nwhile True:\n    message = {"text": input("\ud83e\uddd1: ")}\n    commands = bot.process_message(message, dialog)\n    for command in commands:\n        print("\ud83e\udd16:", command["text"])\n')),(0,a.kt)("p",null,"So what did that code do?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"First we imported the MaxBot class. An instance of this class will be our bot."),(0,a.kt)("li",{parentName:"ul"},"Next we create an instance of this class using factory classmethod ",(0,a.kt)("inlineCode",{parentName:"li"},"MaxBot.inline"),". This method allows us to define all the necessary resources, such as intents and dialog nodes, right in the code instead of external files."),(0,a.kt)("li",{parentName:"ul"},"We then define variable ",(0,a.kt)("inlineCode",{parentName:"li"},"dialog")," that contains information about the conversation and start the conversation loop."),(0,a.kt)("li",{parentName:"ul"},"At each step of the loop we receive a message from the user and process it with our bot."),(0,a.kt)("li",{parentName:"ul"},"The method ",(0,a.kt)("inlineCode",{parentName:"li"},"bot.process_message")," returns a list of commands. These commands are printed as a response to the user.")),(0,a.kt)("p",null,"Save this code as ",(0,a.kt)("inlineCode",{parentName:"p"},"basic.py"),". To run the application, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"python basic.py")," command. Type some messages and you get similar output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ python basic.py\n\ud83e\uddd1: Hello\n\ud83e\udd16: Good day to you!\n\ud83e\uddd1: Good bye\n\ud83e\udd16: OK. See you later.\n\ud83e\uddd1: |\n")))}d.isMDXComponent=!0}}]);