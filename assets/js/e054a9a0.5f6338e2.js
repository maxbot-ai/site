"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[536],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(n),k=r,h=m["".concat(d,".").concat(k)]||m[k]||u[k]||l;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1535:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={},i="Resources",o={unversionedId:"design-reference/resources",id:"design-reference/resources",title:"Resources",description:"Bot resources are a collection of all the data and code necessary to build a particular bot. The bot development process is primarily the process of creating resources. Resources are described in YAML markup language according to a given schema and stored in files.",source:"@site/docs/design-reference/resources.md",sourceDirName:"design-reference",slug:"/design-reference/resources",permalink:"/design-reference/resources",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"MaxBot CLI",permalink:"/design-reference/cli"},next:{title:"Protocol",permalink:"/design-reference/protocol"}},d={},p=[{value:"<code>BotSchema</code>",id:"botschema",level:2},{value:"Intents",id:"intents",level:2},{value:"<code>IntentSchema</code>",id:"intentschema",level:3},{value:"Entities",id:"entities",level:2},{value:"<code>EntitySchema</code>",id:"entityschema",level:3},{value:"Phrase entity",id:"phrase-entity",level:4},{value:"Regex entity",id:"regex-entity",level:4},{value:"Attributes",id:"attributes",level:4},{value:"<code>EntityValue</code>",id:"entityvalue",level:3},{value:"RPC",id:"rpc",level:2},{value:"<code>MethodSchema</code>",id:"methodschema",level:3},{value:"<code>ParamSchema</code>",id:"paramschema",level:3},{value:"Dialog Tree",id:"dialog-tree",level:2},{value:"<code>NodeSchema</code>",id:"nodeschema",level:3},{value:"<code>NodeCommands</code>",id:"nodecommands",level:3},{value:"<code>JumpTo</code>",id:"jumpto",level:3},{value:"<code>NodeSettings</code>",id:"nodesettings",level:3},{value:"Slot Filling",id:"slot-filling",level:2},{value:"<code>SlotSchema</code>",id:"slotschema",level:3},{value:"<code>HandlerSchema</code>",id:"handlerschema",level:3},{value:"<code>FoundCommands</code>",id:"foundcommands",level:3},{value:"<code>NotFoundCommands</code>",id:"notfoundcommands",level:3},{value:"<code>PromptCommands</code>",id:"promptcommands",level:3},{value:"<code>HandlerCommands</code>",id:"handlercommands",level:3}],s={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"resources"},"Resources"),(0,r.kt)("p",null,"Bot resources are a collection of all the data and code necessary to build a particular bot. The bot development process is primarily the process of creating resources. Resources are described in YAML markup language according to a given schema and stored in files."),(0,r.kt)("h2",{id:"botschema"},(0,r.kt)("inlineCode",{parentName:"h2"},"BotSchema")),(0,r.kt)("p",null,"Container for all bot resources."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"extensions")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ExtensionsSchema")),(0,r.kt)("td",{parentName:"tr",align:null},"Extensions used to customize a bot.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"channels")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ChannelsSchema")),(0,r.kt)("td",{parentName:"tr",align:null},"Channels used to communicate with the user.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"intents")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"#intentschema"},"IntentSchema"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Intents used to recognize user goals based on user input.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"entities")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"#entityschema"},"EntitySchema"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Entities used to extract pieces of information from user input.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rpc")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"#methodschema"},"MethodSchema"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"RPC methods.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dialog"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"#nodeschema"},"NodeSchema"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Dialog tree containing conversational logic.")))),(0,r.kt)("h2",{id:"intents"},"Intents"),(0,r.kt)("h3",{id:"intentschema"},(0,r.kt)("inlineCode",{parentName:"h3"},"IntentSchema")),(0,r.kt)("p",null,"Schema for intent definition."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Intent name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"examples")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Intent examples.")))),(0,r.kt)("h2",{id:"entities"},"Entities"),(0,r.kt)("h3",{id:"entityschema"},(0,r.kt)("inlineCode",{parentName:"h3"},"EntitySchema")),(0,r.kt)("p",null,"Schema for entity definition."),(0,r.kt)("h4",{id:"phrase-entity"},"Phrase entity"),(0,r.kt)("p",null,"You define an entity (",(0,r.kt)("inlineCode",{parentName:"p"},"entities.menu"),"), and then one or more values for that entity (",(0,r.kt)("inlineCode",{parentName:"p"},"standard"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vegetarian"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cake"),'). For each value, you specify a bunch of phrases with which this value can be mentioned in the user input, e.g. "cake shop", "dessert menu" and "bakery offerings" for the ',(0,r.kt)("inlineCode",{parentName:"p"},"cake")," value etc."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"name: menu\nvalues:\n  - name: standard\n    phrases:\n      - standard\n      - carte du jour\n      - cuisine\n  - name: vegetarian\n    phrases:\n      - vegetarian\n      - vegan\n      - plants-only\n  - name: cake\n    phrases:\n      - cake shop\n      - dessert menu\n      - bakery offerings\n")),(0,r.kt)("p",null,"MaxBot recognizes pieces of information in the user input that closely match the phrases that you defined for the entity as mentions of that entity."),(0,r.kt)("h4",{id:"regex-entity"},"Regex entity"),(0,r.kt)("p",null,"You define an entity (",(0,r.kt)("inlineCode",{parentName:"p"},"entities.order_number"),"), and then one or more values for that entity (",(0,r.kt)("inlineCode",{parentName:"p"},"short_syntax"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"full_syntax"),"). For each value, you specify a regular expression that defines the textual pattern of mentions of that value type."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"name: order_number\nvalues:\n  - name: short_syntax\n    regexps:\n      - '[A-Z]{2}\\\\d{5}'\n  - name: full_syntax\n    regexps:\n      - '[DEF]\\\\-[A-Z]{2}\\\\d{5}'\n")),(0,r.kt)("p",null,"MaxBot looks for patterns matching your regular expression in the user input, and identifies any matches as mentions of that entity."),(0,r.kt)("h4",{id:"attributes"},"Attributes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Entity name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"values")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"#entityvalue"},"EntityValue"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Entity values.")))),(0,r.kt)("h3",{id:"entityvalue"},(0,r.kt)("inlineCode",{parentName:"h3"},"EntityValue")),(0,r.kt)("p",null,"Schema for entity value definition."),(0,r.kt)("p",null,"A value of phrase entity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"name: standard\nphrases:\n  - standard\n  - carte du jour\n  - cuisine\n")),(0,r.kt)("p",null,"A value of regex entity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"name: short_syntax\nregexps:\n  - '[A-Z]{2}\\\\d{5}'\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A name used to identify the value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"phrases")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"A list of phrases with which the value can be mentioned in the user input.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"regexps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"A list of a regular expressions that defines the textual pattern of mentions of the value.")))),(0,r.kt)("h2",{id:"rpc"},"RPC"),(0,r.kt)("h3",{id:"methodschema"},(0,r.kt)("inlineCode",{parentName:"h3"},"MethodSchema")),(0,r.kt)("p",null,"JSON-RPC method definition."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"method"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Method name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"params")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"#paramschema"},"ParamSchema"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Formal parameters of the method.")))),(0,r.kt)("h3",{id:"paramschema"},(0,r.kt)("inlineCode",{parentName:"h3"},"ParamSchema")),(0,r.kt)("p",null,"JSON-RPC formal parameter definition."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the parameter.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"required")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/booleans"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the parameter is required.")))),(0,r.kt)("h2",{id:"dialog-tree"},"Dialog Tree"),(0,r.kt)("h3",{id:"nodeschema"},(0,r.kt)("inlineCode",{parentName:"h3"},"NodeSchema")),(0,r.kt)("p",null,"Definition of the dialog tree node."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"label")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Unique node label. The following nodes must have a label. ",(0,r.kt)("ul",null,(0,r.kt)("li",null,"Nodes that contains slot filling or followup nodes. This kind of nodes use labels internally to store their state."),(0,r.kt)("li",null,"Nodes that targeted by the ",(0,r.kt)("inlineCode",{parentName:"td"},"jump_to")," command. Labels are used in the jump_to arguments.")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"condition"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-guides/templates#expressions"},"Expression")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether that node is used in the conversation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"slot_filling")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"#slotschema"},"SlotSchema"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"List of slots for the Slot Filling Flow.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"slot_handlers")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"#handlerschema"},"HandlerSchema"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"List of slot handlers for the Slot Filling Flow.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/jinja"},"Template"),"[",(0,r.kt)("a",{parentName:"td",href:"#nodecommands"},"NodeCommands"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Defines how to reply to the user.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"followup")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/lists"},"List"),"[",(0,r.kt)("a",{parentName:"td",href:"#nodeschema"},"NodeSchema"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"List of followup nodes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"settings")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#nodesettings"},"NodeSettings")),(0,r.kt)("td",{parentName:"tr",align:null},"Node settings.")))),(0,r.kt)("h3",{id:"nodecommands"},(0,r.kt)("inlineCode",{parentName:"h3"},"NodeCommands")),(0,r.kt)("p",null,"Control commands for node ",(0,r.kt)("inlineCode",{parentName:"p"},"response")," scenarios."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"end")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"End the conversation and reset its state.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"listen")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Wait for the user to provide new input that the response elicits.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"followup")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Bypass waiting for user input and go directly to the first followup node of the current node instead.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Note: the current node must have at least one followup node for this option to be available.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"jump_to")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#jumpto"},"JumpTo")),(0,r.kt)("td",{parentName:"tr",align:null},"Go directly to an entirely different dialog node.")))),(0,r.kt)("h3",{id:"jumpto"},(0,r.kt)("inlineCode",{parentName:"h3"},"JumpTo")),(0,r.kt)("p",null,"Jump to a different node after response is processed."),(0,r.kt)("p",null,"Specify when the target node is processed by choosing one of the following options."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"condition")," - the bot checks first whether the condition of the targeted node evaluates to true.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If the condition evaluates to true, the system processes the target node immediately."),(0,r.kt)("li",{parentName:"ul"},"If the condition does not evaluate to true, the system moves to the next sibling node of the target node to evaluate its condition, and repeats this process until it finds a dialog node with a condition that evaluates to true."),(0,r.kt)("li",{parentName:"ul"},"If the system processes all the siblings and none of the conditions evaluate to true, the bot resets its current conversation state."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"response")," - the bot does not evaluate the condition of the targeted dialog node; it processes the response of the targeted dialog node immediately."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"listen")," - Waits for new input from the user, and then begins to process it from the node that you jump to.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"node"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A label of the node to jump to.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transition")),(0,r.kt)("td",{parentName:"tr",align:null},"Enum","[",(0,r.kt)("inlineCode",{parentName:"td"},"condition"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"response"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"listen"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies when the target node is processed.")))),(0,r.kt)("h3",{id:"nodesettings"},(0,r.kt)("inlineCode",{parentName:"h3"},"NodeSettings")),(0,r.kt)("p",null,"Settings that change the behavior for an individual node."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"after_digression_followup")),(0,r.kt)("td",{parentName:"tr",align:null},"Enum","[",(0,r.kt)("inlineCode",{parentName:"td"},"allow_return"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"never_return"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"For nodes that have ",(0,r.kt)("inlineCode",{parentName:"td"},"followup")," children, when digression triggered after the node's response.",(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"allow_return")," - allow return from digression and continue to process its followup nodes (default)."),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"never_return")," - prevent the dialog from returning to the current node.")))))),(0,r.kt)("h2",{id:"slot-filling"},"Slot Filling"),(0,r.kt)("h3",{id:"slotschema"},(0,r.kt)("inlineCode",{parentName:"h3"},"SlotSchema")),(0,r.kt)("p",null,"Slot is used to gather a piece of information from the user input."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/design-guides/slot-filling"},"Slot Filling")," for more information."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name "),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/strings"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A name for the slot variable in which to store the value of interest from the user input.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Do not reuse a slot variable that is used elsewhere in the dialog. If the slot variable has a value already, then the slot's prompt is not displayed. It is only when the slot variable is null that the prompt for the slot is displayed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"check_for"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-guides/templates#expressions"},"Expression")),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if the user input contains the value of interest. If so, the value is stored in the slot variable which you provided in the ",(0,r.kt)("inlineCode",{parentName:"td"},"name")," field.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Avoid checking for any state variable values in the ",(0,r.kt)("inlineCode",{parentName:"td"},"check_for")," field. Because the value you check for is also the value that is saved, using a state variable in the condition can lead to unexpected behavior. Instead, consider using a slot ",(0,r.kt)("inlineCode",{parentName:"td"},"condition"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-guides/templates#expressions"},"Expression")),(0,r.kt)("td",{parentName:"tr",align:null},"If provided, the result will be stored as a slot value instead of ",(0,r.kt)("inlineCode",{parentName:"td"},"check_for"),".",(0,r.kt)("br",null),(0,r.kt)("br",null),"In some cases, you might want to use the ",(0,r.kt)("inlineCode",{parentName:"td"},"check_for")," expression to capture the value, but not apply the expression to what is saved. In such cases, you can use one expression in the ",(0,r.kt)("inlineCode",{parentName:"td"},"check_for")," field to capture the value, and other expression in the ",(0,r.kt)("inlineCode",{parentName:"td"},"value")," field to store something else.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"condition")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-guides/templates#expressions"},"Expression")),(0,r.kt)("td",{parentName:"tr",align:null},"Makes the slot only be enabled under the specified condition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prompt")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/jinja"},"Template"),"[",(0,r.kt)("a",{parentName:"td",href:"#promptcommands"},"PromptCommands"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"A response that asks a piece of the information you need from the user. After displaying this prompt the bot waits for the user to respond.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Add a slot without a prompt to make a slot optional.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"found")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/jinja"},"Template"),"[",(0,r.kt)("a",{parentName:"td",href:"#foundcommands"},"FoundCommands"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Displayed after the user provides the expected information. Useful to validate the information provided.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"not_found")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/jinja"},"Template"),"[",(0,r.kt)("a",{parentName:"td",href:"#notfoundcommands"},"NotFoundCommands"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Displayed only if the information provided by the user is not understood, which means all of the following are true:",(0,r.kt)("ul",null,(0,r.kt)("li",null,"none of the active slots are filled successfully;"),(0,r.kt)("li",null,"no slot handlers are understood;"),(0,r.kt)("li",null,"nothing triggered as a digression from slot filling.")))))),(0,r.kt)("h3",{id:"handlerschema"},(0,r.kt)("inlineCode",{parentName:"h3"},"HandlerSchema")),(0,r.kt)("p",null,"Provide responses to questions users might ask that are tangential to the purpose of the slot filling. After responding to the off-topic question, the prompt associated with the current empty slot is displayed."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/design-guides/slot-filling#slot-handlers"},"Slot Filling")," for more information."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"condition"),"*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-guides/templates#expressions"},"Expression")),(0,r.kt)("td",{parentName:"tr",align:null},"Triggers slot handler based on user input provided any time during the slot filling.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/jinja"},"Template"),"[",(0,r.kt)("a",{parentName:"td",href:"#handlercommands"},"HandlerCommands"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Responds to the user when the slot handler is triggered.")))),(0,r.kt)("h3",{id:"foundcommands"},(0,r.kt)("inlineCode",{parentName:"h3"},"FoundCommands")),(0,r.kt)("p",null,"Controls what happens after ",(0,r.kt)("inlineCode",{parentName:"p"},"found")," response is sent."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/design-guides/slot-filling#found"},"Slot Filling")," for more information."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"move_on")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Move on to the next empty slot after displaying the response (default).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prompt_again")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Clear the current slot value and prompt for the correct value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"listen_again")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Do not prompt for the slot and just wait for the user to respond.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Skip the remaining slots and go directly to the node-level response.")))),(0,r.kt)("h3",{id:"notfoundcommands"},(0,r.kt)("inlineCode",{parentName:"h3"},"NotFoundCommands")),(0,r.kt)("p",null,"Controls what happens after ",(0,r.kt)("inlineCode",{parentName:"p"},"not_found")," response is sent."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/design-guides/slot-filling#not-found"},"Slot Filling")," for more information."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prompt_again")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Prompt for the correct slot value (default)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"listen_again")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Do not prompt for the slot and just wait for the user to respond.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Skip the remaining slots and go directly to the node-level response.")))),(0,r.kt)("h3",{id:"promptcommands"},(0,r.kt)("inlineCode",{parentName:"h3"},"PromptCommands")),(0,r.kt)("p",null,"Controls what happens after ",(0,r.kt)("inlineCode",{parentName:"p"},"prompt")," response is sent."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/design-guides/slot-filling"},"Slot Filling")," for more information."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"listen_again")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Wait for the user to respond (default).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Skip the remaining slots and go directly to the node-level response.")))),(0,r.kt)("h3",{id:"handlercommands"},(0,r.kt)("inlineCode",{parentName:"h3"},"HandlerCommands")),(0,r.kt)("p",null,"Controls what happens after slot handler response is sent."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/design-guides/slot-filling#slot-handlers"},"Slot Filling")," for more information."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"move_on")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Move on to the next empty slot after displaying the response (default).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/design-reference/dictionaries"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Skip the remaining slots and go directly to the node-level response.")))))}m.isMDXComponent=!0}}]);